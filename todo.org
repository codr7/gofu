* switch parentTypes to map[Type]Type
** rename parentTypes to parents
** parent -> direct parent
** change Type.Isa to Type.HasParent() Type
*** check map 
** add Type.AddParent()
** update Isa
* add Stack.String()
* add Scope.parent
** add Init arg
** search recursively in Find
*** only return recursive result if Slot (compile time)
** compile function definition in child scope
*** store in Func and use to init stack when calling
**** move args from incoming stack
* add form based macros
** name
** implementation func(forms.Call, *Scope) (Form, error)
** Call at compile time 
* add Skip op
* add Jump op
** add Block.Pc() int
*** return len
* add CompileError type with pos
** use in Form.Compile
* add Bool type
* add String type
* add fuzzy search to Scope.Find
** use edit distance to provide alternatives on failed search
* add parser framework
